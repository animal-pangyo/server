// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {

  idx               Int       @id @default(autoincrement())
  user_id           String    @unique  
  user_name         String   
  email             String   @unique
  pwd               String
  created_at        DateTime  @default(now())
  updated_at        DateTime
  roles             String
  phone             String
  address1          String
  address2          String
  month             String
  year              String
  day               String
  posts             Post[]
  comments          Comment[]
  atn               String   @db.Text
  reviews           Review[] @relation("ReviewUser")
  likes             Like[]   @relation("LikeUser")
}

model Post {
  post_id    Int      @id @default(autoincrement())
  board_id   Int
  title      String
  content    String
  author_id  String
  created_at DateTime @default(now())
	post_pw    String?
  board      Board    @relation(fields: [board_id], references: [board_id])
  author     User     @relation(fields: [author_id], references: [user_id], onDelete: Cascade)
  comments   Comment[]
}

model Board {
  board_id   Int      @id @default(autoincrement())
  board_name String
  board_type String
  created_at DateTime @default(now())
  posts             Post[]
}

model Comment {
  comment_id Int      @id @default(autoincrement())
  post_id    Int
  content    String
  author_id  Int
  created_at DateTime @default(now())
  post       Post     @relation(fields: [post_id], references: [post_id])
  author     User     @relation(fields: [author_id], references: [idx])
}

model Store {
  store_id Int      @id @default(autoincrement())
  store_type    String
	name       String
  address    String
  detail_address String
  details    String
  business_hours String
  contact String
  latitude String
  longitude String
  reviews Review[]
  likes Like[]
  created_at DateTime @default(now())
  address_id String
}

model Review {
  review_id   Int      @id @default(autoincrement())
  content     String
  title       String
  store_id    Int      
  user_id    String 
  store     Store     @relation(fields: [store_id], references: [store_id])
  user        User       @relation("ReviewUser", fields: [user_id], references: [user_id], onDelete: Cascade) 
  created_at  DateTime @default(now())
}

model Like {
  Like_id     Int      @id @default(autoincrement())
  user_id     Int
  store_id  Int
  user        User     @relation("LikeUser", fields: [user_id], references: [idx] , onDelete: Cascade)
  store     Store  @relation(fields: [store_id], references: [store_id])
  created_at  DateTime @default(now())
}